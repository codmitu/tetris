{"version":3,"sources":["setup.ts","components/Stage/Stage.styles.ts","components/Cell/Cell.styles.ts","components/Cell/Cell.tsx","components/Stage/Stage.tsx","components/Display/Display.styles.ts","components/Display/Display.tsx","components/StartButton/StartButton.styles.ts","components/StartButton/StartButton.tsx","gameHelpers.ts","App.styles.ts","hooks/useStage.ts","hooks/useGameStatus.ts","App.tsx","hooks/usePlayer.ts","hooks/useInterval.ts","img/bg.jpg","index.tsx"],"names":["ROWPOINTS","TETROMINOS","shape","color","I","J","L","O","S","T","Z","StyledStage","styled","div","StyledCell","props","type","Cell","React","memo","Stage","stage","map","row","cell","x","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","createStage","Array","from","fill","randomTetromino","tetrominos","randTetromino","Math","floor","random","length","isColliding","player","moveX","moveY","y","tetromino","pos","StyledTetrisWrapper","StyledTetris","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","App","gameArea","useRef","dropTime","setDropTime","setGameOver","setPlayer","useCallback","STAGE_WIDTH","updatePlayerPos","playerRotate","matrix","clonedPlayer","JSON","parse","stringify","_","i","column","reverse","posX","offset","usePlayer","score","setScore","rows","setRows","level","setLevel","useGameStatus","movePlayer","dir","delay","savedCallback","current","id","setInterval","clearInterval","useInterval","console","log","role","tabIndex","onKeyDown","keyCode","repeat","onKeyUp","ref","className","focus","GlobalStyles","createGlobalStyle","bgImage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0391d34.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\nexport const ROWPOINTS = [40, 100, 300, 1200];\n\nexport const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape: [\n      [0, 'I', 0, 0],\n      [0, 'I', 0, 0],\n      [0, 'I', 0, 0],\n      [0, 'I', 0, 0]\n    ],\n    color: '80, 227, 230'\n  },\n  J: {\n    shape: [\n      [0, 'J', 0],\n      [0, 'J', 0],\n      ['J', 'J', 0]\n    ],\n    color: '36, 95, 223'\n  },\n  L: {\n    shape: [\n      [0, 'L', 0],\n      [0, 'L', 0],\n      [0, 'L', 'L']\n    ],\n    color: '223, 173, 36'\n  },\n  O: {\n    shape: [\n      ['O', 'O'],\n      ['O', 'O']\n    ],\n    color: '223, 217, 36'\n  },\n  S: {\n    shape: [\n      [0, 'S', 'S'],\n      ['S', 'S', 0],\n      [0, 0, 0]\n    ],\n    color: '48, 211, 56'\n  },\n  T: {\n    shape: [\n      [0, 0, 0],\n      ['T', 'T', 'T'],\n      [0, 'T', 0]\n    ],\n    color: '132, 61, 198'\n  },\n  Z: {\n    shape: [\n      ['Z', 'Z', 0],\n      [0, 'Z', 'Z'],\n      [0, 0, 0]\n    ],\n    color: '227, 78, 78'\n  }\n};","import styled from 'styled-components';\nimport { STAGE_WIDTH, STAGE_HEIGHT } from '../../setup';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${STAGE_WIDTH}, 30px);\n  grid-template-rows: repeat(${STAGE_HEIGHT}, 30px);\n  grid-gap: 1px;\n  border: 1px solid #777;\n  background: #222;\n`;\n","import styled from 'styled-components';\nimport { TETROMINOS } from '../../setup';\n\ntype Props = {\n  type: keyof typeof TETROMINOS;\n  color: string;\n};\n\nexport const StyledCell = styled.div<Props>`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`;\n","import React, { FC } from 'react'\r\nimport { StyledCell } from './Cell.styles'\r\nimport { TETROMINOS } from '../../setup'\r\n\r\ntype Props = {\r\n    type: keyof typeof TETROMINOS\r\n}\r\n\r\nconst Cell: FC<Props> = ({type}) => {\r\n    return (\r\n        <StyledCell type={type} color={TETROMINOS[type].color}>\r\n            \r\n        </StyledCell>\r\n    )\r\n}\r\n\r\nexport default React.memo(Cell)\r\n","import React, { FC } from 'react'\r\nimport { StyledStage } from './Stage.styles'\r\nimport Cell from '../Cell/Cell'\r\nimport { TETROMINOS } from '../../setup'\r\n\r\nexport type STAGECELL = [keyof typeof TETROMINOS, string]\r\nexport type STAGE  = STAGECELL[][]\r\n\r\ntype Props = {\r\n    stage: STAGE\r\n}\r\n\r\nexport const Stage: FC<Props> = ({stage}) => {\r\n    return (\r\n        <StyledStage>\r\n            {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} /> ))}\r\n        </StyledStage>\r\n    )\r\n}\r\n","import styled from 'styled-components';\n\ntype Props = {\n  gameOver?: boolean;\n};\n\nexport const StyledDisplay = styled.div<Props>`\n  box-sizing: border-box;\n  display: flex;\n  align-items: space-between;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 2px solid #777;\n  min-height: 20px;\n  width: 120px;\n  border-radius: 10px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;\n","import React, { FC } from 'react'\r\nimport { StyledDisplay } from './Display.styles'\r\n\r\ntype Props = {\r\n    gameOver?: boolean\r\n    text: string\r\n}\r\n\r\nexport const Display: FC<Props> = ({gameOver, text}) => {\r\n    return (\r\n        <StyledDisplay gameOver={gameOver}>\r\n            {text}\r\n        </StyledDisplay>\r\n    )\r\n}\r\n","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 20px;\n  width: 170px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  background: #111;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;\n","import React, { FC } from 'react'\r\nimport { StyledStartButton } from './StartButton.styles'\r\n\r\ntype Props = {\r\n    callback: () => void\r\n}\r\n\r\nexport const StartButton: FC<Props> = ({callback}) => {\r\n    return (\r\n        <StyledStartButton onClick={callback}>\r\n            Start Game\r\n        </StyledStartButton>\r\n    )\r\n}\r\n","import { PLAYER } from './hooks/usePlayer';\nimport { STAGE } from './hooks/useStage';\nimport { STAGE_WIDTH, STAGE_HEIGHT } from './setup';\nimport { TETROMINOS } from './setup';\n\nexport const createStage  = () => Array.from(Array(STAGE_HEIGHT), () => Array(STAGE_WIDTH).fill([0, 'clear']));\n\nexport const randomTetromino = () => {\n  const tetrominos = ['I', 'J', 'L', 'O', 'S', 'T', 'Z'] as (keyof typeof TETROMINOS)[];\n  const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n};\n\n\nexport const isColliding = (\n  player: PLAYER,\n  stage: STAGE,\n  {x: moveX, y: moveY} : {x: number, y: number}\n) => {\n  for (let y = 0; y < player.tetromino.length; y++) {\n    for (let x = 0; x < player.tetromino[y].length; x++) {\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          !stage[y + player.pos.y + moveY] ||\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== \"clear\"\n        ) {\n          return true\n        }\n      }\n    }\n  }\n}","import styled from 'styled-components';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  outline: none;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 40px;\n  margin: 0 auto;\n\n  .display {\n    display: flex;\n    justify-content: space-between;\n    width: 380px;\n  }\n`;\n","import { useEffect, useState } from \"react\";\r\nimport { createStage } from \"../gameHelpers\";\r\nimport  {PLAYER} from \"./usePlayer\"\r\n\r\nexport type STAGECELL = [string | number, string]\r\nexport type STAGE = STAGECELL[][]\r\n\r\n\r\nexport const useStage = (player: PLAYER, resetPlayer: () => void) => {\r\n    const [stage, setStage] = useState(createStage())\r\n    const [rowsCleared, setRowsCleared] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (!player.pos) return\r\n\r\n        setRowsCleared(0)\r\n\r\n        const sweepRows = (newStage: STAGE): STAGE => {\r\n            return newStage.reduce((ack, row) => {\r\n                if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n                    setRowsCleared(prev => prev + 1)\r\n                    ack.unshift(new Array(newStage[0].length).fill([0, \"clear\"]) as STAGECELL[])\r\n                    return ack\r\n                }\r\n                ack.push(row)\r\n                return ack\r\n            }, [] as STAGE)\r\n        }\r\n\r\n        const updateStage = (prevStage: STAGE): STAGE => {\r\n            const newStage = prevStage.map(row => row.map(cell => (cell[1] === \"clear\" ? [0, 'clear'] : cell)) as STAGECELL[])\r\n\r\n            player.tetromino.forEach((row, y) => {\r\n                row.forEach((cell, x) => {\r\n                    if (cell !== 0) {\r\n                        newStage[y + player.pos.y][x + player.pos.x] = [cell, `${player.collided ? \"merged\" : \"clear\"}`]\r\n                    }\r\n                })\r\n            })\r\n            if (player.collided) {\r\n                resetPlayer()\r\n                return sweepRows(newStage)\r\n            }\r\n\r\n            return newStage\r\n        }\r\n\r\n        setStage(prev => updateStage(prev))\r\n    }, [player.collided, player.pos?.x, player.pos?.y, player.tetromino])\r\n    return {stage, setStage, rowsCleared}\r\n}","import { useEffect, useState } from \"react\";\r\nimport { ROWPOINTS } from \"../setup\";\r\n\r\n\r\nexport const useGameStatus = (rowsCleared: number) => {\r\n    const [score, setScore] = useState(0)\r\n    const [rows, setRows] = useState(0)\r\n    const [level, setLevel] = useState(1)\r\n\r\n    useEffect(() => {\r\n        if (rowsCleared > 0) {\r\n            setScore(prev => prev + ROWPOINTS[rowsCleared - 1] * level)\r\n            setRows(prev => prev + rowsCleared)\r\n        }\r\n    }, [rowsCleared])\r\n\r\n    return {score, setScore, rows, setRows, level, setLevel}\r\n}","import React, { FC, useRef, useState } from 'react';\nimport { Stage } from './components/Stage/Stage';\nimport { Display } from './components/Display/Display';\nimport { StartButton } from './components/StartButton/StartButton';\nimport { createStage, isColliding } from './gameHelpers';\n// Styles\nimport { StyledTetrisWrapper, StyledTetris } from './App.styles';\n\nimport { usePlayer } from './hooks/usePlayer';\nimport { useStage } from './hooks/useStage';\nimport { useInterval } from './hooks/useInterval';\nimport { useGameStatus } from './hooks/useGameStatus';\n\n\nconst App: FC = () => {\n  const gameArea = useRef<HTMLDivElement>(null)\n\n  const [dropTime, setDropTime] = useState<null | number>(null)\n  const [gameOver, setGameOver] = useState(true)\n\n  const {player, updatePlayerPos, resetPlayer, playerRotate} = usePlayer()\n  const {stage, setStage, rowsCleared} = useStage(player, resetPlayer)\n  const {score, setScore, level, setLevel, rows, setRows} = useGameStatus(rowsCleared)\n\n  const movePlayer = (dir: number) => {\n    if(!isColliding(player, stage, {x: dir, y: 0}))\n    updatePlayerPos({x: dir, y: 0, collided: false})\n  }\n\n  const keyUp = ({keyCode}: {keyCode: number}): void => {\n    if (!gameOver) {\n      if(keyCode === 40) {\n        setDropTime(1000 / level + 200)\n      }\n    }\n    \n  }\n\n  const handleStartGame = (): void => {\n    if(gameArea.current) gameArea.current.focus()\n    setStage(createStage())\n    setDropTime(1000)\n    resetPlayer()\n    setScore(0)\n    setLevel(1)\n    setRows(0)\n    setGameOver(false)\n  }\n\n  const move = ({keyCode, repeat}: {keyCode: number, repeat: boolean}): void => {\n    if (!gameOver) {\n      if(keyCode === 37) {\n        movePlayer(-1)\n      } else if (keyCode === 39) {\n        movePlayer(1)\n      } else if (keyCode === 40) {\n        if (repeat) return\n        setDropTime(30)\n      } else if (keyCode === 38) {\n        playerRotate(stage)\n      }\n    }\n  }\n\n  const drop = ():void => {\n    if (rows > level * 10) {\n      setLevel(prev => prev + 1) \n      setDropTime(1000 / level + 200)\n    }\n    \n\n    if (!isColliding(player, stage, {x: 0, y: 1})) {\n      updatePlayerPos({x: 0, y: 1, collided: false})\n    } else {\n      if (player.pos.y < 1) {\n        console.log(\"Game over!\")\n        setGameOver(true)\n        setDropTime(null)\n      }\n      updatePlayerPos({x: 0, y: 0, collided: true})\n    }\n  } \n  useInterval(() => {\n    drop()\n  }, dropTime)\n  \n  return (\n    <StyledTetrisWrapper role='button' tabIndex={0} onKeyDown={move} onKeyUp={keyUp} ref={gameArea}>\n      <StyledTetris>\n        <div className=\"display\">\n          {gameOver ? \n          <>\n            <Display gameOver={gameOver} text=\"Game Over!\"  /> \n            <StartButton callback={handleStartGame}/>\n          </> :\n          <>\n            <Display text={`Score: ${score}`} />\n            <Display text={`Rows: ${rows}`} />\n            <Display text={`Level: ${level}`} />\n          </>\n        }\n        </div>\n        <Stage stage={stage}/>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default App;\n","import { STAGE_WIDTH } from \"../setup\";\r\nimport { isColliding, randomTetromino } from \"../gameHelpers\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { STAGE } from \"./useStage\";\r\n\r\nexport interface PLAYER {\r\n    pos: {\r\n        x: number,\r\n        y: number\r\n    }\r\n    tetromino: (string | number)[][]\r\n    collided: boolean\r\n}\r\n\r\nexport const usePlayer = () => {\r\n    const [player, setPlayer] = useState({} as PLAYER)\r\n\r\n    const rotate = (matrix: PLAYER['tetromino']) => {\r\n        const ntrx = matrix.map((_, i) => matrix.map(column => column[i]))\r\n        return ntrx.map(row => row.reverse())\r\n    }\r\n\r\n    const playerRotate = (stage: STAGE): void => {\r\n        const clonedPlayer = JSON.parse(JSON.stringify(player))\r\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino)\r\n        const posX = clonedPlayer.pos.x\r\n        let offset = 1\r\n        while (isColliding(clonedPlayer, stage, {x: 0, y: 0})) {\r\n            clonedPlayer.pos.x += offset\r\n            offset = -(offset + (offset > 0 ? 1 : -1))\r\n            if (offset > clonedPlayer.tetromino[0].length) {\r\n                clonedPlayer.pos.x = posX\r\n                return\r\n            }\r\n        }\r\n        setPlayer(clonedPlayer)\r\n    }\r\n\r\n    const updatePlayerPos = ({x, y, collided}: {x: number, y:  number, collided: boolean}): void => {\r\n        setPlayer(prev => ({\r\n            ...prev,\r\n            pos: {x: prev.pos.x += x, y: prev.pos.y += y},\r\n            collided\r\n        }))\r\n    }\r\n    const resetPlayer = useCallback(\r\n        (): void => setPlayer({\r\n            pos: {x: STAGE_WIDTH / 2 - 2, y: 0},\r\n            tetromino: randomTetromino().shape,\r\n            collided: false\r\n        }), []\r\n    )\r\n\r\n    return {player, updatePlayerPos, resetPlayer, playerRotate}\r\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef<null | (() => void)>(null);\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick(): void {\n      if (savedCallback.current) savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","export default __webpack_public_path__ + \"static/media/bg.d3649f38.jpg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport App from './App';\nimport bgImage from './img/bg.jpg';\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background: url(${bgImage}) #000;\n    background-size: cover;\n    background-position: center;\n  }\n`;\n\nReactDOM.render(\n  <>\n    <GlobalStyles />\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}